info technique
base de donnees oracle database plugged version 23.2 (realease 2024)
midelware Ords restfuLL services 12
environement EDI /RAD Oracle apex 23.2 (realease 2024)
architecture tiers partie cloud storage
languages et outils de developpement java Script/Html 5/ PL-Sql /Sql 
production Application Web /Progressive PWA

Data base ddl
//////////
  CREATE TABLE "ABSENSE_PROFPLUS" 
   (	"ID_LINE" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"ID_ETUDIANT" NUMBER, 
	"DATE_ABS" DATE, 
	"ID_ENSEIGNAT" NUMBER, 
	"JUSTIFIED" CHAR(1) DEFAULT '0'
   ) ;

  CREATE TABLE "DAYX" 
   (	"ID_DAYX" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"DAYX" VARCHAR2(50)
   ) ;


  CREATE TABLE "ENSEIGNANTS_PROFPLUS" 
   (	"ID_ENSEIGNANTS" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"FIRST_NAME" VARCHAR2(200 CHAR), 
	"LAST_NAME" VARCHAR2(200 CHAR), 
	"EMAIL" VARCHAR2(200 CHAR), 
	"DEPARTEMENT" VARCHAR2(20 CHAR)
   ) ;

  

  CREATE TABLE "ETUDIANTS_PROFPLUS" 
   (	"STUDENT_ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"FIRST_NAME" VARCHAR2(200 CHAR), 
	"LAST_NAME" VARCHAR2(200 CHAR), 
	"EMAIL" VARCHAR2(200 CHAR), 
	"ID_GROUP" NUMBER
   ) ;

  
  CREATE TABLE "EVALUATION_PROFPLUS" 
   (	"ID_EVALUATION" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"ID_STUDENT" NUMBER, 
	"DATE_EVALUATION" DATE, 
	"PARTICIPATION" NUMBER, 
	"EXAMEN" FLOAT(126), 
	"MICRO_1" FLOAT(126), 
	"MICRO_2" FLOAT(126)
   ) ;

  
  CREATE TABLE "GROUPE_PROFPLUS" 
   (	"ID_GROUPE" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"NAME_GROUPE" VARCHAR2(200 CHAR), 
	"ID_NIVEAU" NUMBER
   ) ;

  CREATE TABLE "MODULEX" 
   (	"ID_MODULX" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"MODULEX" VARCHAR2(200)
   ) ;

  CREATE TABLE "NIVEAU_PROFPLUS" 
   (	"ID_NIVEAU" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"NAME_NIVEAU" VARCHAR2(200 CHAR)
   ) ;

  CREATE TABLE "PROFPLUS_CLASS" 
   (	"ID_CLASS" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"CLASS" VARCHAR2(200)
   ) ;

  CREATE TABLE "PROFPLUS_EMPTIME" 
   (	"ANNEE_SCOLAIRE" VARCHAR2(10 CHAR) DEFAULT 2024, 
	"ID_DAYX" NUMBER, 
	"TIME1" VARCHAR2(5 CHAR), 
	"TIME2" VARCHAR2(5 CHAR), 
	"ID_MODULEX" NUMBER, 
	"ID_ENSEIGNANTS" NUMBER, 
	"ID_CLASS" NUMBER, 
	"ID_NIVEAU" NUMBER, 
	"ID_GROUPE" NUMBER
   ) ;

   CREATE SEQUENCE  "EDT_SEQ"  MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "ENS_SEQ"  MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "ETUD_SEQ"  MINVALUE 1 MAXVALUE 9999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "GRP_SEQ"  MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;

   CREATE SEQUENCE  "NIV_SEQ"  MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
 
 CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_RESULTATS" ("ETUDIANT", "NBR_ETUDIANT", "PERIODE", "JUSTIFIED") AS 
  select

 ETUDIANTS_PROFPLUS.FIRST_NAME||' '||   ETUDIANTS_PROFPLUS.LAST_NAME as etudiant,

   count( ABSENSE_PROFPLUS.ID_ETUDIANT) as nbr_ETUDIANT,
    to_char(ABSENSE_PROFPLUS.DATE_ABS,'MM/RRRR' ) periode,
    ABSENSE_PROFPLUS.JUSTIFIED as JUSTIFIED 
 from ETUDIANTS_PROFPLUS ETUDIANTS_PROFPLUS,
    ABSENSE_PROFPLUS ABSENSE_PROFPLUS 
 where ABSENSE_PROFPLUS.ID_ETUDIANT=ETUDIANTS_PROFPLUS.STUDENT_ID
 group by 
 ETUDIANTS_PROFPLUS.FIRST_NAME||' '||   ETUDIANTS_PROFPLUS.LAST_NAME ,

    to_char(ABSENSE_PROFPLUS.DATE_ABS,'MM/RRRR' ) ,
    ABSENSE_PROFPLUS.JUSTIFIED;

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "V_TODAY_WORK" ("ANNEE_SCOLAIRE", "ID_DAYX", "DAYX", "TIME1", "TIME2", "ID_MODULEX", "MODULEX", "ID_ENSEIGNANTS", "FIRST_NAME", "LAST_NAME", "EMAIL", "DEPARTEMENT", "LOGIN_PROFPLUS", "ID_CLASS", "CLASS", "ID_BLOC", "BLOC", "ID_NIVEAU", "NAME_NIVEAU", "ID_GROUPE", "NAME_GROUPE") AS 
  select PROFPLUS_EMPTIME.ANNEE_SCOLAIRE as ANNEE_SCOLAIRE,
    PROFPLUS_EMPTIME.ID_DAYX as ID_DAYX,
    DAYX.DAYX as DAYX,
    PROFPLUS_EMPTIME.TIME1 as TIME1,
    PROFPLUS_EMPTIME.TIME2 as TIME2,
    PROFPLUS_EMPTIME.ID_MODULEX as ID_MODULEX,
    MODULEX.MODULEX as MODULEX,
    PROFPLUS_EMPTIME.ID_ENSEIGNANTS as ID_ENSEIGNANTS,
    ENSEIGNANTS_PROFPLUS.FIRST_NAME as FIRST_NAME,
    ENSEIGNANTS_PROFPLUS.LAST_NAME as LAST_NAME,
    ENSEIGNANTS_PROFPLUS.EMAIL as EMAIL,
    ENSEIGNANTS_PROFPLUS.DEPARTEMENT as DEPARTEMENT,
    ENSEIGNANTS_PROFPLUS.LOGIN_PROFPLUS as LOGIN_PROFPLUS,
    PROFPLUS_EMPTIME.ID_CLASS as ID_CLASS,
    PROFPLUS_CLASS.CLASS as CLASS,
    PROFPLUS_CLASS.ID_BLOC as ID_BLOC,
    BLOC_PROFPLUS.BLOC as BLOC,
    PROFPLUS_EMPTIME.ID_NIVEAU as ID_NIVEAU,
    NIVEAU_PROFPLUS_1.NAME_NIVEAU as NAME_NIVEAU,
    GROUPE_PROFPLUS_1.ID_GROUPE as ID_GROUPE,
    GROUPE_PROFPLUS_1.NAME_GROUPE as NAME_GROUPE 
 from GROUPE_PROFPLUS GROUPE_PROFPLUS_1,
    BLOC_PROFPLUS BLOC_PROFPLUS,
    NIVEAU_PROFPLUS NIVEAU_PROFPLUS_1,
    PROFPLUS_CLASS PROFPLUS_CLASS,
    ENSEIGNANTS_PROFPLUS ENSEIGNANTS_PROFPLUS,
    MODULEX MODULEX,
    DAYX DAYX,
    PROFPLUS_EMPTIME PROFPLUS_EMPTIME 
 where DAYX.ID_DAYX=PROFPLUS_EMPTIME.ID_DAYX
    and PROFPLUS_EMPTIME.ID_MODULEX=MODULEX.ID_MODULX
    and ENSEIGNANTS_PROFPLUS.ID_ENSEIGNANTS=PROFPLUS_EMPTIME.ID_ENSEIGNANTS
    and PROFPLUS_EMPTIME.ID_CLASS=PROFPLUS_CLASS.ID_CLASS
    and NIVEAU_PROFPLUS_1.ID_NIVEAU=PROFPLUS_EMPTIME.ID_NIVEAU
    and GROUPE_PROFPLUS_1.ID_GROUPE=PROFPLUS_EMPTIME.ID_GROUPE
    and BLOC_PROFPLUS.ID_BLOC=PROFPLUS_CLASS.ID_BLOC;
/////////


Code source

language: sql/pl-sql oracle ;
type :procedure ;
evenement :on show;
rafrechissement: on change record
fonctionnalites : calcule de la note 
page :evaluation

SELECT
    etudiants_profplus.first_name
    || ' '
    || etudiants_profplus.last_name        AS last_name,
    evaluation_profplus.id_student         AS id_student,
    evaluation_profplus.date_evaluation    AS date_evaluation,
    evaluation_profplus.participation      AS participation,
    evaluation_profplus.micro_1            AS micro_1,
    evaluation_profplus.micro_2            AS micro_2,
    round(
        (evaluation_profplus.micro_1 + evaluation_profplus.micro_2) / 2,
        2
    )                                      AS note_micro,
    decode(
        COUNT(absense_profplus.date_abs),
        0,
        0,
        1,
        1,
        2,
        2,
        3,
        3,
        4,
        4,
        5
    )                                      nbr_abs,
    ( round(
        (evaluation_profplus.micro_1 + evaluation_profplus.micro_2) / 2,
        2
    ) + evaluation_profplus.participation ) - ( decode(
        COUNT(absense_profplus.date_abs),
        0,
        0,
        1,
        1,
        2,
        2,
        3,
        3,
        4,
        4,
        5
    ) )                                     note_finale
FROM
    etudiants_profplus   etudiants_profplus,
    absense_profplus     absense_profplus,
    evaluation_profplus  evaluation_profplus,
     groupe_profplus,
     niveau_profplus,
     enseignants_profplus
WHERE
        absense_profplus.id_etudiant = evaluation_profplus.id_student
    AND etudiants_profplus.student_id = evaluation_profplus.id_student
    AND  groupe_profplus.id_niveau =  niveau_profplus.id_niveau
    AND  groupe_profplus.id_enseignant =  enseignants_profplus.id_enseignants
    AND  groupe_profplus.id_groupe = etudiants_profplus.id_group
    AND absense_profplus.justified = '0'
and upper(enseignants_profplus.login_profplus)=upper(:app_user)
GROUP BY
    etudiants_profplus.first_name
    || ' '
    || etudiants_profplus.last_name,
    evaluation_profplus.id_student,
    evaluation_profplus.date_evaluation,
    evaluation_profplus.participation,
    evaluation_profplus.micro_1,
    evaluation_profplus.micro_2,
    round(
        (evaluation_profplus.micro_1 + evaluation_profplus.micro_2) / 2,
        2
    )

language: sql/pl-sql oracle ;
type :procedure ;
evenement :on show;
rafrechissement: on change record
fonctionnalites : affichage des cards 
page :Programme Quotidien 

select 
       id_dayx,
       DAYX as title ,
       TIME1||'-'||TIME2 as subtitle, 
       MODULEX ||'-'||NAME_NIVEAU||'- Groupe:'||NAME_GROUPE  as bodytext ,
       'Bloc:'||BLOC||'-'||'Classe:'||CLASS as secondary
      
  from V_TODAY_WORK
where to_char(id_niveau) like '%%'||:P27_ORDER_BY||'%%'
and 
 to_char(id_dayx) like '%%'||:P27_DAYX||'%%'
order by id_dayx asc


language: sql/pl-sql oracle ;
type :Bpdy package ;
evenement :on connect;
rafrechissement: never
fonctionnalites : controle d accees 
page :global hidden page 

BEGIN
  DBMS_NETWORK_ACL_ADMIN.create_acl (
   acl => 'https://apex.oracle.com', 
   description => '/prof_plus_prj/profplus2',
     is_grant => TRUE,
    privilege => 'connect',
    start_date => SYSTIMESTAMP,
    end_date => NULL);

  DBMS_NETWORK_ACL_ADMIN.assign_acl (
    acl => 'https://apex.oracle.com', 
    host => '*',
    lower_port => 1,
    upper_port => 9999); 

  COMMIT;
END;